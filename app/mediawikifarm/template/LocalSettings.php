<?php
# This file was automatically generated by the MediaWiki 1.44.0
# installer. If you make manual changes, please keep track in case you
# need to recreate them later.
#
# See includes/MainConfigSchema.php for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.
#
# Further documentation for configuration settings may be found at:
# https://www.mediawiki.org/wiki/Manual:Configuration_settings

# Protect against web entry
if ( !defined( 'MEDIAWIKI' ) ) {
        exit;
}

## Uncomment this to disable output compression
# $wgDisableOutputCompression = true;

$wikiIni = parse_ini_file("pubwiki.ini");

$wgSitename = $wikiIni['WIKI_SITE_NAME'];
$wgMetaNamespace = $wikiIni['WIKI_META_NAMESPACE'];

## The URL base path to the directory containing the wiki;
## defaults for all runtime URL paths are based off of this.
## For more information on customizing the URLs
## (like /w/index.php/Page_title to /wiki/Page_title) please see:
## https://www.mediawiki.org/wiki/Manual:Short_URL
$wgScriptPath = "";

## The protocol and server name to use in fully-qualified URLs
$wgServer = $wikiIni['WIKI_HOST_URL'];

## The URL path to static resources (images, scripts, etc.)
$wgResourceBasePath = $wgScriptPath;

## The URL paths to the logo.  Make sure you change this from the default,
## or else you'll overwrite your logo when you upgrade!
$wgLogos = [
        '1x' => "$wgResourceBasePath/resources/assets/change-your-logo.svg",
        'icon' => "$wgResourceBasePath/resources/assets/change-your-logo.svg",
];

## UPO means: this is also a user preference option

$wgEnableEmail = true;
$wgEnableUserEmail = true; # UPO

$wgEmergencyContact = "";
$wgPasswordSender = "";

$wgEnotifUserTalk = false; # UPO
$wgEnotifWatchlist = false; # UPO
$wgEmailAuthentication = true;


## Database settings
$wgDBtype = "mysql";
$wgDBserver = $wikiIni["WIKI_DB_HOST"];
$wgDBname = $wikiIni["WIKI_SLUG"];
$wgDBuser = $wikiIni["WIKI_SLUG"];
$wgDBpassword = $wikiIni["WIKI_DB_PASSWORD"];

$wgSharedDB = $wikiIni["WIKI_SHARED_DB_NAME"];
$wgCookieDomain = '.' . $wikiIni["WIKI_ROOT_HOST"];

# MySQL specific settings
$wgDBprefix = "";
$wgDBssl = false;

# MySQL table options to use during installation or update
$wgDBTableOptions = "ENGINE=InnoDB, DEFAULT CHARSET=binary";

# Shared database table
# This has no effect unless $wgSharedDB is also set.
$wgSharedTables[] = "actor";

## Shared memory settings
$wgMainCacheType = CACHE_ACCEL;
$wgMemCachedServers = [];

## To enable image uploads, make sure the 'images' directory
## is writable, then set this to true:
$wgEnableUploads = true;
$wgUseImageMagick = true;
$wgImageMagickConvertCommand = "/usr/bin/convert";

# InstantCommons allows wiki to use images from https://commons.wikimedia.org
$wgUseInstantCommons = false;

# Periodically send a pingback to https://www.mediawiki.org/ with basic data
# about this MediaWiki instance. The Wikimedia Foundation shares this data
# with MediaWiki developers to help guide future development efforts.
$wgPingback = false;

# Site language code, should be one of the list in ./includes/languages/data/Names.php
$wgLanguageCode = $wikiIni['WIKI_LANG'];

# Time zone
$wgLocaltimezone = "UTC";

## Set $wgCacheDirectory to a writable directory on the web server
## to make your wiki go slightly faster. The directory should not
## be publicly accessible from the web.
#$wgCacheDirectory = "$IP/cache";

$wgSecretKey = "d6a2ef0fb399f7b0fab6b257e849b3f8dffeeab8d05ef87d72e2f280ad10d886";

# Changing this will log out all existing sessions.
$wgAuthenticationTokenVersion = "1";

# Site upgrade key. Must be set to a string (default provided) to turn on the
# web installer while LocalSettings.php is in place
$wgUpgradeKey = "c268f6e70a8ddd07";

## For attaching licensing metadata to pages, and displaying an
## appropriate copyright notice / icon. GNU Free Documentation
## License and Creative Commons licenses are supported so far.
$wgRightsPage = ""; # Set to the title of a wiki page that describes your license/copyright
$wgRightsUrl = "https://creativecommons.org/licenses/by-sa/4.0/";
$wgRightsText = "知识共享署名-相同方式共享";
$wgRightsIcon = "$wgResourceBasePath/resources/assets/licenses/cc-by-sa.png";

# Path to the GNU diff3 utility. Used for conflict resolution.
$wgDiff3 = "/usr/bin/diff3";

# The following permissions were set based on your choice in the installer
$wgGroupPermissions["*"]["createaccount"] = true;
$wgGroupPermissions["*"]["edit"] = true;

## Default skin: you can change the default skin. Use the internal symbolic
## names, e.g. 'vector' or 'monobook':
$wgDefaultSkin = "minerva";

# Enabled skins.
# The following skins were automatically enabled:
wfLoadSkin( 'MinervaNeue' );
wfLoadSkin( 'MonoBook' );
wfLoadSkin( 'Timeless' );
wfLoadSkin( 'Vector' );


# End of automatically generated settings.
# Add more configuration options below.

# Built-in extension
wfLoadExtension( 'CategoryTree' );

# Built-in extension
wfLoadExtension( 'Scribunto' ); 
$wgScribuntoDefaultEngine = 'luastandalone';

# Built-in extension
wfLoadExtension( 'TemplateStyles' );


wfLoadExtension( 'PortableInfobox' );

# configure OAuth
wfLoadExtension( 'OAuth' );
$wgMWOAuthCentralWiki = false;
# TODO: check if this is suitable
$wgGroupPermissions["oauth"]["mwoauthproposeconsumer"] = true;
$wgGroupPermissions["oauth"]["mwoauthupdateownconsumer"] = true;
$wgGroupPermissions["oauth"]["mwoauthmanageconsumer"] = true;
$wgGroupPermissions["oauth"]["mwoauthsuppress"] = true;
$wgGroupPermissions["oauth"]["mwoauthviewprivate"] = true;
$wgGroupPermissions["oauth"]["mwoauthviewsuppressed"] = true;
$wgGroupPermissions["oauth"]["mwoauthmanagemygrants"] = true;
$wgOAuth2PrivateKey = "/oauth/" . $wikiIni["WIKI_SLUG"] . "/oauth.key";
$wgOAuth2PublicKey = "/oauth/" . $wikiIni["WIKI_SLUG"] . "/oauth.cert";

# Load Wikibase Repository
wfLoadExtension( 'WikibaseRepository', "$IP/extensions/Wikibase/extension-repo.json" );
require_once "$IP/extensions/Wikibase/repo/ExampleSettings.php";

# Load Wikibase Client
wfLoadExtension( 'WikibaseClient', "$IP/extensions/Wikibase/extension-client.json" );
require_once "$IP/extensions/Wikibase/client/ExampleSettings.php";

wfLoadExtension( 'Babel' );

wfLoadExtension( 'cldr' );

$wgCCTrailerFilter = true;
$wgCCUserFilter = false;
$wgDefaultUserOptions['usenewrc'] = 1;

wfLoadExtension( 'Translate' );
$wgGroupPermissions['user']['translate'] = true;
$wgGroupPermissions['user']['translate-messagereview'] = true;
$wgGroupPermissions['user']['translate-groupreview'] = true;
$wgGroupPermissions['user']['translate-import'] = true;
$wgGroupPermissions['sysop']['pagetranslation'] = true;
$wgGroupPermissions['sysop']['translate-manage'] = true;
$wgTranslateDocumentationLanguageCode = 'qqq';
$wgExtraLanguageNames['qqq'] = 'Message documentation'; # No linguistic content. Used for documenting messages

wfLoadExtension( 'UniversalLanguageSelector' );

wfLoadExtension( 'Elastica' );
wfLoadExtension( 'CirrusSearch' );
$wgCirrusSearchServers = [[
  'host'      => $wikiIni["OPENSEARCH_ENDPOINT"], // 你的域名（不带 https://）
  'port'      => 443,
  'transport' => 'Https',
  'username'  => $wikiIni["OPENSEARCH_USER"],              // 你在 Dashboards 里创建的用户
  'password'  => $wikiIni["OPENSEARCH_PASSWORD"]
]];

$wgCirrusSearchIndexBaseName = $wikiIni["WIKI_DB_NAME"];
$wgSearchType = 'CirrusSearch';

$redisPassword = $wikiIni["REDIS_PASSWORD"];
$wgJobTypeConf['default'] = [
  'class' => 'JobQueueRedis',
  'order' => 'fifo',
  'redisServer' => $wikiIni["REDIS_SERVER"],
  'checkDelay' => true,
  'redisConfig' => [
    'password' => $redisPassword,
  ],
];

$wgGitInfoCacheDirectory = "$IP/cache/gitinfo";
$wgShowExceptionDetails = true;

if ($wikiIni["WIKI_BOOTSTRAPING"]) {
  $wgSharedTables = [];
  $wgDisableSearchUpdate = true;
}
